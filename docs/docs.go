// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "email": "your.email@example.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "Register a new user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register new user",
                "parameters": [
                    {
                        "description": "Registration details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.RegisterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/operators": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get performance metrics for operators (Production Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get operator performance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.PerformanceResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/reports/summary": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a summary report of work orders by status (Production Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reports"
                ],
                "summary": "Get work order summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date (YYYY-MM-DD)",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End date (YYYY-MM-DD)",
                        "name": "end_date",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.SummaryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a paginated list of all work orders (Production Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Get all work orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (pending/in_progress/completed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new work order (Production Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Create work order",
                "parameters": [
                    {
                        "description": "Work order details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders/assigned": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get work orders assigned to the current operator",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Get assigned work orders",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page (default: 10)",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (pending/in_progress/completed)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get a work order by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Get work order by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a work order (Production Manager only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Update work order",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Work order update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateWorkOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders/{id}/history": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get the status history for a work order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get work order status history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.StatusHistoryResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders/{id}/progress": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get all progress entries for a work order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Get work order progress",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.ProgressListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new progress entry for a work order",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "progress"
                ],
                "summary": "Create progress entry",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Progress details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.CreateProgressRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/controllers.ProgressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/work-orders/{id}/status": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update a work order status (Operator only)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "work-orders"
                ],
                "summary": "Update work order status",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Work order ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status update details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.UpdateWorkOrderStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/controllers.WorkOrderResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/controllers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.CreateProgressRequest": {
            "type": "object",
            "required": [
                "progress_description",
                "progress_quantity"
            ],
            "properties": {
                "progress_description": {
                    "type": "string"
                },
                "progress_quantity": {
                    "type": "integer",
                    "minimum": 0
                }
            }
        },
        "controllers.CreateWorkOrderRequest": {
            "type": "object",
            "required": [
                "operator_id",
                "product_name",
                "production_deadline",
                "quantity"
            ],
            "properties": {
                "operator_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "production_deadline": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "controllers.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.LoginResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "role": {
                            "$ref": "#/definitions/models.Role"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "controllers.OperatorPerformance": {
            "type": "object",
            "properties": {
                "assigned": {
                    "type": "integer"
                },
                "completed": {
                    "type": "integer"
                },
                "in_progress": {
                    "type": "integer"
                },
                "operator_id": {
                    "type": "integer"
                },
                "total_quantity": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controllers.PerformanceResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "performances": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.OperatorPerformance"
                    }
                }
            }
        },
        "controllers.ProgressListResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "progress": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkOrderProgress"
                    }
                }
            }
        },
        "controllers.ProgressResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "progress": {
                    "$ref": "#/definitions/models.WorkOrderProgress"
                }
            }
        },
        "controllers.RegisterRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 6
                },
                "role": {
                    "enum": [
                        "production_manager",
                        "operator"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Role"
                        }
                    ]
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "controllers.RegisterResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "integer"
                        },
                        "role": {
                            "$ref": "#/definitions/models.Role"
                        },
                        "username": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "controllers.StatusHistoryResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "history": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkOrderStatusHistory"
                    }
                }
            }
        },
        "controllers.SummaryResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "summary": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/controllers.WorkOrderSummary"
                    }
                }
            }
        },
        "controllers.UpdateWorkOrderRequest": {
            "type": "object",
            "properties": {
                "operator_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "production_deadline": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "minimum": 1
                },
                "status": {
                    "$ref": "#/definitions/models.WorkOrderStatus"
                }
            }
        },
        "controllers.UpdateWorkOrderStatusRequest": {
            "type": "object",
            "required": [
                "status"
            ],
            "properties": {
                "quantity": {
                    "type": "integer",
                    "minimum": 0
                },
                "status": {
                    "enum": [
                        "pending",
                        "in_progress",
                        "completed"
                    ],
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.WorkOrderStatus"
                        }
                    ]
                }
            }
        },
        "controllers.WorkOrderListResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "pagination": {
                    "type": "object",
                    "properties": {
                        "limit": {
                            "type": "integer"
                        },
                        "page": {
                            "type": "integer"
                        },
                        "pages": {
                            "type": "integer"
                        },
                        "total": {
                            "type": "integer"
                        }
                    }
                },
                "work_orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.WorkOrder"
                    }
                }
            }
        },
        "controllers.WorkOrderResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "boolean"
                },
                "work_order": {
                    "$ref": "#/definitions/models.WorkOrder"
                }
            }
        },
        "controllers.WorkOrderSummary": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "integer"
                },
                "count": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.WorkOrderStatus"
                }
            }
        },
        "models.Role": {
            "type": "string",
            "enum": [
                "production_manager",
                "operator"
            ],
            "x-enum-varnames": [
                "RoleProductionManager",
                "RoleOperator"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.WorkOrder": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "operator": {
                    "$ref": "#/definitions/models.User"
                },
                "operator_id": {
                    "type": "integer"
                },
                "product_name": {
                    "type": "string"
                },
                "production_deadline": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.WorkOrderStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_order_number": {
                    "type": "string"
                }
            }
        },
        "models.WorkOrderProgress": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "progress_description": {
                    "type": "string"
                },
                "progress_quantity": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_order": {
                    "$ref": "#/definitions/models.WorkOrder"
                },
                "work_order_id": {
                    "type": "integer"
                }
            }
        },
        "models.WorkOrderStatus": {
            "type": "string",
            "enum": [
                "pending",
                "in_progress",
                "completed"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusInProgress",
                "StatusCompleted"
            ]
        },
        "models.WorkOrderStatusHistory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "integer"
                },
                "status": {
                    "$ref": "#/definitions/models.WorkOrderStatus"
                },
                "updated_at": {
                    "type": "string"
                },
                "work_order": {
                    "$ref": "#/definitions/models.WorkOrder"
                },
                "work_order_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{"http", "https"},
	Title:            "Work Order System API",
	Description:      "This is the API documentation for the Work Order System",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
